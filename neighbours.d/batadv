(lambda neighbours: {
    open("{}/address".format(path)).read().strip(): {"neighbours": {
        neigh[0]: {"lastseen": neigh[1], "tq": neigh[2]}
        for neigh in neighbours
        if neigh[3] == path[len('/sys/class/net/{}/lower_'.format(batadv_dev)):]
    }}
    for path in
    import_module('glob').glob('/sys/class/net/{}/lower_*'.format(batadv_dev))
})([
    (line[0], float(line[1].strip('s')), int(line[2].strip(')')), line[4].strip('[]:'))
    for line in map(lambda l: l.replace('* ','').replace('(', '').replace('[', '').split(),
        call(['batctl', '-m', batadv_dev, 'originators', '-H', '-n']))
    if line[0] == line[3]
])
